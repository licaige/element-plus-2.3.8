/* Element CSS 变量相关的 SCSS 自定义函数 */
@use 'sass:map';

@use 'config';
@use 'function' as *;
@use '../common/var' as *;

// set css var value, because we need translate value to string
// for example:
// @include set-css-var-value(('color', 'primary'), red);
//最终为了得到类似--el-color-primary: red;的基类实例
// border-width
// return --el-border-width: 1px
@mixin set-css-var-value($name, $value) {
  #{joinVarName($name)}: #{$value};
}

// @include set-css-var-type('color', 'primary', $map);
// --el-color-primary: #{map.get($map, 'primary')};
@mixin set-css-var-type($name, $type, $variables) {
  #{getCssVarName($name, $type)}: #{map.get($variables, $type)};
}
/*
--el-color-info-light-dark-2: #73767a;
    --el-color-info-light-light-9: #f4f4f5;
    --el-color-info-light-light-8: #e9e9eb;
    --el-color-info-light-light-7: #dedfe0;
    --el-color-info-light-light-6: #d3d4d6;
    --el-color-info-light-light-5: #c8c9cc;
    --el-color-info-light-light-4: #bcbec2;
    --el-color-info-light-light-3: #b1b3b8;
    --el-color-info-light-light-2: #a6a9ad;
    --el-color-info-light-light-1: #9b9ea3;
    --el-color-info-light-base: #909399;
*/
//为了得到类似的数据
@mixin set-css-color-type($colors, $type) {
  @include set-css-var-value(('color', $type), map.get($colors, $type, 'base'));

  @each $i in (3, 5, 7, 8, 9) {
    @include set-css-var-value(
      ('color', $type, 'light', $i),
      map.get($colors, $type, 'light-#{$i}')
    );
  }

  @include set-css-var-value(
    ('color', $type, 'dark-2'),
    map.get($colors, $type, 'dark-2')
  );
}
//新增
@mixin set-css-color-type-all($colors, $type) {
  //@include set-css-var-value(('color', $type), map.get($colors, $type, 'base'));
  //@for $i from 1 through 9 {
  //  @include set-css-var-value(
  //        ('color', $type, 'light', $i),
  //      map.get($colors, $type, 'light-#{$i}')
  //  );
  //}
  //
  //@include set-css-var-value(
  //      ('color', $type, 'dark-2'),
  //    map.get($colors, $type, 'dark-2')
  //);
  $allColors: map.get($colors, $type);
  @each $key,$val in $allColors{
    @include set-css-var-value(
          ('color', $type, 'light', $key), $val);
  }
}
// set all css var for component by map
// 接收两个参数，name 和 $variables 列表
// --el-bg-color: #ffffff
// --el-bg-color-page: #ffffff
// --el-bg-color-overlay: #ffffff
//--el-font-size-extra-large: 20px;
//--el-font-size-large: 18px;
//--el-font-size-medium: 16px;
//--el-font-size-base: 14px;
//--el-font-size-small: 13px;
//--el-font-size-extra-small: 12px;
@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    @if $attribute == 'default' {
      #{getCssVarName($name)}: #{$value};
    } @else {
      #{getCssVarName($name, $attribute)}: #{$value};
    }
  }
}

@mixin set-css-color-rgb($type) {
  $color: map.get($colors, $type, 'base');
  @include set-css-var-value(
    ('color', $type, 'rgb'),
    #{red($color),
    green($color),
    blue($color)}
  );
}

// generate css var from existing css var
// for example:
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --el-button-text-color: var(--el-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}
